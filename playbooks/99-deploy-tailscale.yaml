---
- name: Deploy Tailscale Portainer
  hosts: management
  gather_facts: false
  become: no
  vars:
    service_name: "tailscale"
    destination_host: "vpn"
    container_name: "{{ service_name }}"
    docker_compose_template: "tailscale/tailscale-compose.yaml.j2"
    docker_compose_output: "{{ cluster_output_path }}/docker-compose/tailscale-compose.yaml"
    storage_base_dir: "/storage/{{ service_name }}"
    tailscale_api_url: "https://api.tailscale.com/api/v2"
    tailscale_storage_dir_container: "/var/lib/tailscale"
    volumes:
      - src: "{{ storage_base_dir }}"
        dst: "{{ tailscale_storage_dir_container }}"
        type: dir
      - src: "/dev/net/tun"
        dst: "/dev/net/tun"
        type: file
  vars_files:
    - vars/common.yaml
    - "{{ inventory_dir }}/docker-images.yaml"
    - "{{ inventory_dir }}/secrets.yaml"
    - "{{ inventory_dir }}/docker-ports.yaml"

  tasks:
    - name: Get portainer token and endpoints map
      ansible.builtin.include_role:
        name: get-portainer-token-and-endpoints-map

    - name: Ensure Tailscale directories exist
      ansible.builtin.include_role:
        name: ensure-directories-exist
      vars:
        target_hosts: "{{ destination_host }}"

    - name: Render tailscale-compose.yaml from template
      ansible.builtin.template:
        src: "{{ docker_compose_template }}"
        dest: "{{ docker_compose_output }}"
        mode: "0644"
      delegate_to: localhost
      register: rendered_compose_file

    - name: Deploy Tailscale through Portainer
      ansible.builtin.include_role:
        name: deploy-through-portainer
      vars:
        portainer_endpoint_name: "{{ destination_host }}"
        portainer_stack_name: "{{ service_name }}"
        portainer_stack_env: '[{\"name\": \"TS_AUTHKEY\", \"value\": \"{{ tailscale_auth_key }}\"}]'
        service_compose_file: "{{ docker_compose_output }}"
        service_compose_file_changed: "{{ rendered_compose_file.changed }}"

    - name: PENDING MANUAL ACTIONS
      ansible.builtin.debug:
        msg:
          - "1. Setup Split DNS for {{ cluster_domain }} ({{ hostvars['dns'].ansible_host }}) in 'DNS' tab under 'Nameservers' section"
          - "2. In 'Machines' tab edit route settings in order to approve the subnet routes advertised by the tailscale client just started"
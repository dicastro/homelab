---
- name: Create homelab VMs
  hosts: vms
  serial: 1
  strategy: linear
  gather_facts: no
  become: no
  vars:
    vmssshkey_path: "{{ cluster_output_path }}"
    pve_local_dir_host: "/var/lib/vz"
    pve_cloudinit_vendor_config: "snippets/ubuntu-vendor-data.yaml"
  vars_files:
    - vars/common.yaml
    - "{{ inventory_dir }}/secrets.yaml"

  tasks:
    - name: Ensure snippets directory exists
      ansible.builtin.file:
        path: "{{ pve_snippets_dir_host }}"
        state: directory
        mode: "0755"
      delegate_to: pve

    - name: Upload cloud-init snippet
      ansible.builtin.copy:
        src: "snippets/ubuntu-vendor-data.yaml"
        dest: "{{ pve_local_dir_host }}/{{ pve_cloudinit_vendor_config }}"
        mode: "0755"
      delegate_to: pve

    - name: Create vm
      ansible.builtin.command:
        cmd: >
          python scripts/create-vm.py
          --base-path {{ vmssshkey_path }}
          --id {{ vm.id }}
          --name "{{ vm.name }}"
          --ram  {{ vm.ram }}
          --cores {{ vm.cores }}
          --disk-size {{ vm.disk_size }}
          --storage {{ vm.storage }}
          --user {{ vm.user }}
          --upgrade-packages
          --ubuntu-codename {{ vm.ubuntu_codename }}
          --no-dhcp
          --ip {{ ansible_host }}
          --gateway-ip {{ vm.gateway_ip }}
          --dns-servers "{{ vm.dns_servers }}"
          {% if vm.usb_manufacturer is defined %}
          --usb-manufacturer "{{ vm.usb_manufacturer }}"
          {% endif %}
          {% if vm.usb_product is defined %}
          --usb-product "{{ vm.usb_product }}"
          {% endif %}
          --start-on-boot {{ vm.start_on_boot }}
          {% if vm.startup_delay_seconds is defined %}
          --startup-delay-seconds "{{ vm.startup_delay_seconds }}"
          {% endif %}
          --cloud-init-vendor-config "vendor=local:{{ pve_cloudinit_vendor_config }}"
          --proxmox-host {{ proxmox_host }}
          --proxmox-user {{ proxmox_user }}
          --output-format ansible
      register: create_vm_output
      changed_when: (create_vm_output.stdout | from_json).changed
      delegate_to: localhost
      environment:
        PROXMOX_PASSWORD: "{{ proxmox_password }}"

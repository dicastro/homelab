---
- name: Deploy Traefik to Portainer
  hosts: management
  gather_facts: false
  become: no
  vars:
    service_name: "traefik"
    frontend_port: "443"
    container_name: "traefik"
    subdomain_prefix: "traefik"
    docker_compose_template: "traefik/traefik-compose.yaml.j2"
    docker_compose_output: "{{ cluster_output_path }}/docker-compose/traefik-compose.yaml"
    ports:
      - ext: "{{ traefik_web_port }}"
        int: 80
      - ext: "{{ traefik_websecure_port }}"
        int: 443
      - ext: "{{ traefik_dashboard_port }}"
        int: 8080
    storage_base_dir: "/storage/traefik"
    docker_hosts_list: "{{ query('inventory_hostnames', 'docker_hosts') | difference(['vpn']) }}"
    traefik_config_template: "traefik/traefik.yaml.j2"
    traefik_config_output: "{{ cluster_output_path }}/configs/traefik/traefik.yaml"
    traefik_dynamic_template: "traefik/traefik-dynamic.yaml.j2"
    traefik_dynamic_output: "{{ cluster_output_path }}/configs/traefik"
    traefik_config_dir: "{{ storage_base_dir }}/config"
    traefik_config_file: "{{ traefik_config_dir }}/traefik.yaml"
    traefik_certs_dir: "{{ storage_base_dir }}/certs"
    traefik_acme_dir: "{{ storage_base_dir }}/acme"
    traefik_dynamic_dir: "{{ storage_base_dir }}/dynamic"
    traefik_dynamic_file: "{{ traefik_dynamic_dir }}/dynamic.yaml"
    volumes:
      - src: "{{ traefik_config_file }}"
        dst: "/traefik.yaml:ro"
        type: file
      - src: "{{ traefik_certs_dir }}"
        dst: "/certs"
        type: dir
      - src: "{{ traefik_acme_dir }}"
        dst: "/acme"
        type: dir
      - src: "{{ traefik_dynamic_dir }}"
        dst: "/dynamic"
        type: dir
  vars_files:
    - vars/common.yaml
    - "{{ inventory_dir }}/docker-images.yaml"
    - "{{ inventory_dir }}/secrets.yaml"
    - "{{ inventory_dir }}/docker-ports.yaml"

  tasks:
    - name: Extract Traefik named ports
      ansible.builtin.include_role:
        name: extract-named-ports-to-dict

    - name: Get portainer token and endpoints map
      ansible.builtin.include_role:
        name: get-portainer-token-and-endpoints-map

    - name: Ensure Traefik directories exist
      ansible.builtin.include_role:
        name: ensure-directories-exist
      vars:
        target_hosts: docker_hosts

    - name: Ensure the base directory for Traefik output config exists
      ansible.builtin.file:
        path: "{{ traefik_config_output | dirname }}"
        state: directory
        mode: "0755"
      delegate_to: "localhost"

    - name: Generate Traefik config from template
      ansible.builtin.template:
        src: "{{ traefik_config_template }}"
        dest: "{{ traefik_config_output }}"
        mode: "0644"
      delegate_to: "localhost"

    - name: Upload new Traefik config
      ansible.builtin.copy:
        src: "{{ traefik_config_output }}"
        dest: "{{ traefik_config_file }}"
        mode: "0644"
      delegate_to: "{{ item }}"
      loop: "{{ docker_hosts_list }}"

    - name: Generate bcrypt password for Traefik admin password
      ansible.builtin.include_role:
        name: generate-bcrypt-password
      vars:
        password_plaintext: "{{ traefik_admin_password }}"
        password_checksum_file: "{{ cluster_output_path }}/configs/traefik/traefik-admin-password-hash.txt"
        password_bcrypt_file: "{{ cluster_output_path }}/configs/traefik/traefik-admin-password.txt"

    - name: Store the generated bcrypt password into a specific variable
      ansible.builtin.set_fact:
        traefik_admin_password_bcrypt: "{{ password_bcrypt }}"
        traefik_admin_password_changed: "{{ password_changed }}"

    - name: Generate and copy Traefik dynamic for each docker host
      include_tasks: tasks/deploy-traefik/traefik-dynamic-per-host.yaml
      loop: "{{ docker_hosts_list }}"

    - name: Render traefik-compose.yaml from template
      ansible.builtin.template:
        src: "{{ docker_compose_template }}"
        dest: "{{ docker_compose_output }}"
        mode: "0644"
      delegate_to: "localhost"
      register: traefik_compose_file

    - name: Generate and deploy Traefik per docker host
      include_tasks: tasks/deploy-traefik/deploy-traefik-per-host.yaml
      loop: "{{ docker_hosts_list }}"
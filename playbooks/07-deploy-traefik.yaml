---
- name: Deploy Traefik to Portainer
  hosts: management
  gather_facts: false
  become: no
  vars:
    service_name: "traefik"
    frontend_port: "443"
    certificate_tools_path: "{{ output_path }}/{{ cluster_name }}"
    portainer_api_url: "http://localhost:9000/api"
    portainer_api_url_remote: "http://{{ hostvars[inventory_hostname].ansible_host }}:9000/api"
    docker_compose_template: "traefik/traefik-compose.yaml.j2"
    docker_compose_output: "{{ output_path }}/{{ cluster_name }}/docker-compose/traefik-compose.yaml"
    docker_hosts_list: "{{ query('inventory_hostnames', 'docker_hosts') }}"
    traefik_subdomain_prefix: "traefik"
    traefik_config_template: "traefik/traefik.yaml.j2"
    traefik_config_output: "{{ output_path }}/{{ cluster_name }}/configs/traefik/traefik.yaml"
    traefik_password_checksum_file: "{{ output_path }}/{{ cluster_name }}/configs/traefik/traefik-admin-password-hash.txt"
    traefik_password_bcrypt_file: "{{ output_path }}/{{ cluster_name }}/configs/traefik/traefik-admin-password.txt"
    traefik_dynamic_template: "traefik/traefik-dynamic.yaml.j2"
    traefik_dynamic_output: "{{ output_path }}/{{ cluster_name }}/configs/traefik"
    traefik_container_user: "traefik"
    traefik_storage_base_dir: "/storage/traefik"
    traefik_config_dir: "{{ traefik_storage_base_dir }}/config"
    traefik_config_file: "{{ traefik_config_dir }}/traefik.yaml"
    traefik_certs_dir: "{{ traefik_storage_base_dir }}/certs"
    traefik_acme_dir: "{{ traefik_storage_base_dir }}/acme"
    traefik_dynamic_dir: "{{ traefik_storage_base_dir }}/dynamic"
    traefik_dynamic_file: "{{ traefik_dynamic_dir }}/dynamic.yaml"
    traefik_volumes:
      - src: "{{ traefik_config_file }}"
        dst: "/traefik.yaml:ro"
        type: file
      - src: "{{ traefik_certs_dir }}"
        dst: "/certs"
        type: dir
      - src: "{{ traefik_acme_dir }}"
        dst: "/acme"
        type: dir
      - src: "{{ traefik_dynamic_dir }}"
        dst: "/dynamic"
        type: dir
    adguardhome_url: "http://localhost:3000"
  vars_files:
    - vars/common.yaml
    - "{{ inventory_dir }}/docker-images.yaml"
    - "{{ inventory_dir }}/secrets.yaml"

  tasks:
    - name: Wait for Portainer API to be ready
      ansible.builtin.uri:
        url: "http://localhost:9000/api/status"
        method: GET
        return_content: yes
        status_code: 200
      register: portainer_status
      until: portainer_status.status == 200
      retries: 10
      delay: 5

    - name: Obtain Portainer API token
      ansible.builtin.uri:
        url: "{{ portainer_api_url }}/auth"
        method: POST
        body_format: json
        body:
          username: "{{ portainer_admin_user }}"
          password: "{{ portainer_admin_password }}"
        headers:
          Content-Type: "application/json"
        status_code: 200
      register: portainer_auth

    - name: Set API token as a fact
      ansible.builtin.set_fact:
        portainer_api_token: "{{ portainer_auth.json.jwt }}"

    - name: Get existing Portainer endpoints
      ansible.builtin.uri:
        url: "{{ portainer_api_url }}/endpoints"
        method: GET
        headers:
          Authorization: "Bearer {{ portainer_api_token }}"
        return_content: true
      register: existing_endpoints

    - name: Parse existing endpoints
      ansible.builtin.set_fact:
        existing_endpoints_map: "{{ existing_endpoints.json | items2dict(key_name='Name', value_name='Id') }}"

    - name: Existing endpoints
      ansible.builtin.debug:
        var: existing_endpoints_map

    - name: Ensure required directories exist on the destination host
      ansible.builtin.file:
        path: "{{ item.1.src if item.1.type == 'dir' else item.1.src | dirname }}"
        state: directory
        mode: "0700"
      loop: "{{ query('inventory_hostnames', 'docker_hosts') | product(traefik_volumes) | list }}"
      loop_control:
        label: "{{ item.0 }} - {{ item.1.src }}"
      delegate_to: "{{ item.0 }}"
      run_once: true

    - name: Ensure the base directory for docker-compose output exists
      ansible.builtin.file:
        path: "{{ docker_compose_output | dirname }}"
        state: directory
        mode: "0755"
      delegate_to: "localhost"

    - name: Ensure the base directory for Traefik output config exists
      ansible.builtin.file:
        path: "{{ traefik_config_output | dirname }}"
        state: directory
        mode: "0755"
      delegate_to: "localhost"

    - name: Generate Traefik config from template
      ansible.builtin.template:
        src: "{{ traefik_config_template }}"
        dest: "{{ traefik_config_output }}"
        mode: "0644"
      delegate_to: "localhost"
      register: traefik_config_rendered_template

    - name: Upload new Traefik config
      ansible.builtin.copy:
        src: "{{ traefik_config_output }}"
        dest: "{{ traefik_config_file }}"
        mode: "0644"
      delegate_to: "{{ item }}"
      when: traefik_config_rendered_template.changed
      loop: "{{ docker_hosts_list }}"

    - name: Generate bcrypt password for Traefik admin password
      ansible.builtin.include_role:
        name: generate-bcrypt-password
      vars:
        password_plaintext: "{{ traefik_admin_password }}"
        password_checksum_file: "{{ traefik_password_checksum_file }}"
        password_bcrypt_file: "{{ traefik_password_bcrypt_file }}"

    - name: Store the generated bcrypt password into a specific variable
      ansible.builtin.set_fact:
        traefik_admin_password_bcrypt: "{{ password_bcrypt }}"
        traefik_admin_password_changed: "{{ password_changed }}"

    - name: Generate and copy Traefik dynamic for each docker host
      include_tasks: tasks/deploy-traefik/traefik-dynamic-per-host.yaml
      loop: "{{ docker_hosts_list }}"

    - name: Render traefik-compose.yaml from template
      ansible.builtin.template:
        src: "{{ docker_compose_template }}"
        dest: "{{ docker_compose_output }}"
        mode: "0644"
      delegate_to: "localhost"
      register: traefik_compose_file

    - name: Generate and deploy Traefik per docker host
      include_tasks: tasks/deploy-traefik/deploy-traefik-per-host.yaml
      loop: "{{ docker_hosts_list }}"